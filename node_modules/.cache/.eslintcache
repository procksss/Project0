[{"D:\\REACT\\testing\\src\\index.js":"1","D:\\REACT\\testing\\src\\reportWebVitals.js":"2","D:\\REACT\\testing\\src\\App.js":"3","D:\\REACT\\testing\\src\\Component\\Navbar.js":"4","D:\\REACT\\testing\\src\\Component\\Form.js":"5","D:\\REACT\\testing\\src\\Component\\Alert.js":"6","D:\\REACT\\testing\\src\\Component\\About.js":"7"},{"size":613,"mtime":1662988283252,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1662723063925,"results":"10","hashOfConfig":"9"},{"size":1402,"mtime":1662984955615,"results":"11","hashOfConfig":"9"},{"size":2319,"mtime":1662984895327,"results":"12","hashOfConfig":"9"},{"size":2381,"mtime":1662981424556,"results":"13","hashOfConfig":"9"},{"size":323,"mtime":1662981345367,"results":"14","hashOfConfig":"9"},{"size":3537,"mtime":1662983516839,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sgkvzv",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\REACT\\testing\\src\\index.js",[],[],"D:\\REACT\\testing\\src\\reportWebVitals.js",[],[],"D:\\REACT\\testing\\src\\App.js",[],[],"D:\\REACT\\testing\\src\\Component\\Navbar.js",["38","39","40"],[],"import PropTypes from 'prop-types'\r\nimport React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n    \r\n      <nav className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode}`} >\r\n        \r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  Link\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.Mode===\"light\"?\"dark\":\"light\"}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggle} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.Mode}mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  range: PropTypes.number\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Enter Title',\r\n  range: 1564365436\r\n}","D:\\REACT\\testing\\src\\Component\\Form.js",[],[],"D:\\REACT\\testing\\src\\Component\\Alert.js",[],[],"D:\\REACT\\testing\\src\\Component\\About.js",[],[],{"ruleId":"41","severity":1,"message":"42","line":13,"column":11,"nodeType":"43","endLine":13,"endColumn":48},{"ruleId":"41","severity":1,"message":"42","line":30,"column":17,"nodeType":"43","endLine":30,"endColumn":77},{"ruleId":"41","severity":1,"message":"42","line":35,"column":17,"nodeType":"43","endLine":35,"endColumn":50},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]